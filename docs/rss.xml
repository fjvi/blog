<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>小饅頭の部屋</title><link>https://grapehut.us.kg</link><description>Stay hungry. Stay foolish. --Steven Jobs</description><copyright>小饅頭の部屋</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://grapehut.us.kg</link></image><lastBuildDate>Wed, 25 Sep 2024 04:45:59 +0000</lastBuildDate><managingEditor>小饅頭の部屋</managingEditor><ttl>60</ttl><webMaster>小饅頭の部屋</webMaster><item><title>Vol.10 WSL（Windows Subsystem for Linux）</title><link>https://grapehut.us.kg/post/Vol.10%20WSL%EF%BC%88Windows%20Subsystem%20for%20Linux%EF%BC%89.html</link><description># 查看可安装的Linux版本&#13;
&#13;
```&#13;
$ wsl --list --online　或者　$ wsl -l -o&#13;
```&#13;
&#13;
|NAME|FRIENDLY NAME|Default|&#13;
|---|---|---|&#13;
|Ubuntu                        |Ubuntu |★|&#13;
|Debian                         |Debian GNU/Linux||&#13;
|kali-linux                      |Kali Linux Rolling||&#13;
|Ubuntu-18.04              |Ubuntu 18.04 LTS||&#13;
|Ubuntu-20.04              |Ubuntu 20.04 LTS||&#13;
|Ubuntu-22.04              |Ubuntu 22.04 LTS||&#13;
|Ubuntu-24.04              |Ubuntu 24.04 LTS||&#13;
|OracleLinux_7_9           |Oracle Linux 7.9||&#13;
|OracleLinux_8_7           |Oracle Linux 8.7||&#13;
|OracleLinux_9_1           |Oracle Linux 9.1||&#13;
|openSUSE-Leap-15.6   |openSUSE Leap 15.6||&#13;
|SUSE-Linux-Enterprise-15-SP5   |SUSE Linux Enterprise 15 SP5||&#13;
|SUSE-Linux-Enterprise-15-SP6   |SUSE Linux Enterprise 15 SP6||&#13;
|openSUSE-Tumbleweed             |openSUSE Tumbleweed||&#13;
&#13;
&#13;
# 安装 WSL&#13;
```&#13;
$ wsl --install -d &lt;Distribution Name&gt;　或者　$ wsl --install　默认安装Ubuntu&#13;
```&#13;
&#13;
# 查看已安装的Linux版本&#13;
```&#13;
$ wsl --list -v　或者　$ wsl -l -v&#13;
```&#13;
&#13;
# 切换默认Linux版本&#13;
```&#13;
$ wsl -s &lt;DistributionName&gt;　或者　$ wsl --set-default &lt;DistributionName&gt;&#13;
```&#13;
&#13;
。</description><guid isPermaLink="true">https://grapehut.us.kg/post/Vol.10%20WSL%EF%BC%88Windows%20Subsystem%20for%20Linux%EF%BC%89.html</guid><pubDate>Tue, 24 Sep 2024 14:36:27 +0000</pubDate></item><item><title>Vol.9 Windows命令</title><link>https://grapehut.us.kg/post/Vol.9%20Windows-ming-ling.html</link><description># 查看内网IP&#13;
```&#13;
ipconfig&#13;
```&#13;
&#13;
# 查看公网IP&#13;
```&#13;
curl ipinfo.io&#13;
```&#13;
&#13;
# 网络诊断&#13;
```&#13;
tracert www.google.com&#13;
```&#13;
&#13;
# WIFI密码&#13;
```&#13;
netsh wlan show profiles                         　←查看名字&#13;
netsh wlan show profiles name=xxxx key=clear        ←名字代入&#13;
```&#13;
&#13;
# 强制启动ie浏览器&#13;
```&#13;
CreateObject('InternetExplorer.Application').Visible=true&#13;
保存为vbs&#13;
```&#13;
&#13;
# 修复系统文件&#13;
```&#13;
sfc /scannow&#13;
```&#13;
&#13;
# 切换成Win10的右键菜单&#13;
```&#13;
reg add 'HKCU\Software\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32' /f /ve&#13;
````&#13;
&#13;
# 恢复成Win11的右键菜单&#13;
```&#13;
reg delete 'HKCU\Software\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}' /f &#13;
```&#13;
&#13;
# 永久暂停Windows自动更新&#13;
```&#13;
reg add 'HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings' /v FlightSettingsMaxPauseDays /t reg_dword /d 9999 /f&#13;
```&#13;
&#13;
# Windows家庭版开启hyper-v&#13;
```&#13;
pushd '%~dp0'&#13;
dir /b %SystemRoot%servicingPackages*Hyper-V*.mum &gt;hv.txt&#13;
for /f %%i in ('findstr /i . hv.txt 2^&gt;nul') do dism /online /norestart /add-package:'%SystemRoot%servicingPackages%%i'&#13;
del hv.txt&#13;
Dism /online /enable-feature /featurename:Microsoft-Hyper-V -All /LimitAccess /ALL&#13;
pause&#13;
```&#13;
&#13;
`Gmeek-html&lt;img src='https://gitee.com/tech-shrimp/me/raw/master/doc/images/240119/3.png'&gt;`&#13;
&#13;
将文本文档改名为'xxx.bat'，需注意.bat是扩展名&#13;
完成后重启电脑&#13;
&#13;
# Windows特殊文件夹&#13;
- System.Environmentを使って特殊フォルダ一覧リストを出力&#13;
```&#13;
[Environment+SpecialFolder]::GetNames([Environment+SpecialFolder]) | Sort-Object&#13;
&#13;
↓↓特殊フォルダの一覧&#13;
AdminTools&#13;
ApplicationData&#13;
CDBurning&#13;
CommonAdminTools&#13;
CommonApplicationData&#13;
CommonDesktopDirectory&#13;
CommonDocuments&#13;
CommonMusic&#13;
CommonOemLinks&#13;
CommonPictures&#13;
CommonProgramFiles&#13;
CommonProgramFilesX86&#13;
CommonPrograms&#13;
CommonStartMenu&#13;
CommonStartup&#13;
CommonTemplates&#13;
CommonVideos&#13;
Cookies&#13;
Desktop&#13;
DesktopDirectory&#13;
Favorites&#13;
Fonts&#13;
History&#13;
InternetCache&#13;
LocalApplicationData&#13;
LocalizedResources&#13;
MyComputer&#13;
MyDocuments&#13;
MyMusic&#13;
MyPictures&#13;
MyVideos&#13;
NetworkShortcuts&#13;
Personal&#13;
PrinterShortcuts&#13;
ProgramFiles&#13;
ProgramFilesX86&#13;
Programs&#13;
Recent&#13;
Resources&#13;
SendTo&#13;
StartMenu&#13;
Startup&#13;
System&#13;
SystemX86&#13;
Templates&#13;
UserProfile&#13;
Windows&#13;
```&#13;
&#13;
- 各特殊フォルダのパスの取得方法は、Enviroment.GetFolderPath() メソッドを使用&#13;
```&#13;
[Environment]::GetFolderPath('Desktop')&#13;
&gt; C:\Users\xyz\Desktop&#13;
&#13;
[Environment]::GetFolderPath('AdminTools')&#13;
&gt; C:\Users\xyz\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Administrative Tools&#13;
&#13;
[Environment]::GetFolderPath('ProgramFiles')&#13;
&gt; C:\Program Files (x86)&#13;
```&#13;
&#13;
&#13;
- 特殊フォルダのパス一覧を出力&#13;
```&#13;
$SpecialFolders = @{}&#13;
$names = [Environment+SpecialFolder]::GetNames([Environment+SpecialFolder]) | Sort-Object&#13;
$names | Format-Table&#13;
&#13;
foreach($name in $names)&#13;
{&#13;
  if($path = [Environment]::GetFolderPath($name)){&#13;
    $SpecialFolders[$name] = $path&#13;
  }&#13;
}&#13;
$SpecialFolders | Format-Table&#13;
&#13;
# ↓↓パス一覧&#13;
Name                           Value&#13;
----                           -----&#13;
System                         C:\WINDOWS\system32&#13;
CommonApplicationData          C:\ProgramData&#13;
CommonVideos                   C:\Users\Public\Videos&#13;
CDBurning                      C:\Users\win11\AppData\Local\Microsoft\Windows\Burn\Burn&#13;
MyVideos                       C:\Users\win11\Videos&#13;
ProgramFilesX86                C:\Program Files (x86)&#13;
AdminTools                     C:\Users\win11\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Administrative Tools&#13;
History                        C:\Users\win11\AppData\Local\Microsoft\Windows\History&#13;
CommonDocuments                C:\Users\Public\Documents&#13;
Templates                      C:\Users\win11\AppData\Roaming\Microsoft\Windows\Templates&#13;
CommonDesktopDirectory         C:\Users\Public\Desktop&#13;
UserProfile                    C:\Users\win11&#13;
Startup                        C:\Users\win11\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup&#13;
InternetCache                  C:\Users\win11\AppData\Local\Microsoft\Windows\INetCache&#13;
SystemX86                      C:\WINDOWS\SysWOW64&#13;
CommonStartMenu                C:\ProgramData\Microsoft\Windows\Start Menu&#13;
MyPictures                     C:\Users\win11\Pictures&#13;
Recent                         C:\Users\win11\AppData\Roaming\Microsoft\Windows\Recent&#13;
Fonts                          C:\WINDOWS\Fonts&#13;
SendTo                         C:\Users\win11\AppData\Roaming\Microsoft\Windows\SendTo&#13;
CommonProgramFiles             C:\Program Files\Common Files&#13;
ProgramFiles                   C:\Program Files&#13;
Favorites                      C:\Users\win11\Favorites&#13;
CommonStartup                  C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup&#13;
Windows                        C:\WINDOWS&#13;
DesktopDirectory               C:\Users\win11\Desktop&#13;
LocalizedResources             C:\WINDOWS&#13;
MyMusic                        C:\Users\win11\Music&#13;
ApplicationData                C:\Users\win11\AppData\Roaming&#13;
CommonPictures                 C:\Users\Public\Pictures&#13;
CommonPrograms                 C:\ProgramData\Microsoft\Windows\Start Menu\Programs&#13;
Desktop                        C:\Users\win11\Desktop&#13;
PrinterShortcuts               C:\Users\win11\AppData\Roaming\Microsoft\Windows\Printer Shortcuts&#13;
CommonAdminTools               C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Administrative Tools&#13;
NetworkShortcuts               C:\Users\win11\AppData\Roaming\Microsoft\Windows\Network Shortcuts&#13;
CommonMusic                    C:\Users\Public\Music&#13;
CommonProgramFilesX86          C:\Program Files (x86)\Common Files&#13;
Programs                       C:\Users\win11\AppData\Roaming\Microsoft\Windows\Start Menu\Programs&#13;
Resources                      C:\WINDOWS\resources&#13;
MyComputer                     C:\WINDOWS&#13;
CommonTemplates                C:\ProgramData\Microsoft\Windows\Templates&#13;
CommonOemLinks                 C:\WINDOWS&#13;
MyDocuments                    C:\Users\win11\Documents&#13;
StartMenu                      C:\Users\win11\AppData\Roaming\Microsoft\Windows\Start Menu&#13;
Cookies                        C:\Users\win11\AppData\Local\Microsoft\Windows\INetCookies&#13;
LocalApplicationData           C:\Users\win11\AppData\Local&#13;
Personal                       C:\Users\win11\Documents&#13;
```&#13;
。</description><guid isPermaLink="true">https://grapehut.us.kg/post/Vol.9%20Windows-ming-ling.html</guid><pubDate>Mon, 23 Sep 2024 13:28:51 +0000</pubDate></item><item><title>Vol.8 字体</title><link>https://grapehut.us.kg/post/Vol.8%20-zi-ti.html</link><description>## 👀字体类型与格式&#13;
常见的字体类型与格式有 “ ttf、otf、ttc、vf、woff/woff2、可变字体、EOT、BDF、SVG ” 8种&#13;
&#13;
#### 1. TTF（TrueType）&#13;
由Apple和Microsoft在20世纪80年代后期开发的轮廓字体标准，.ttf结尾的字体具有TrueType轮廓，Windows和MacOS都支持TTF格式的字体，它已成为最常用的字体格式。</description><guid isPermaLink="true">https://grapehut.us.kg/post/Vol.8%20-zi-ti.html</guid><pubDate>Mon, 23 Sep 2024 12:20:16 +0000</pubDate></item><item><title>Vol.7 常用VM虚拟机软件一览</title><link>https://grapehut.us.kg/post/Vol.7%20-chang-yong-VM-xu-ni-ji-ruan-jian-yi-lan.html</link><description># 常用虚拟机软件一览&#13;
虚拟机的使用场景很多，如搭建测试环境、在Windows系统中安装Linux或在Mac机器上运行Windows系统、甚至还可以用来进行安全实验。</description><guid isPermaLink="true">https://grapehut.us.kg/post/Vol.7%20-chang-yong-VM-xu-ni-ji-ruan-jian-yi-lan.html</guid><pubDate>Mon, 23 Sep 2024 02:36:28 +0000</pubDate></item><item><title>Vol.6 关于PowerShell命令</title><link>https://grapehut.us.kg/post/Vol.6%20-guan-yu-PowerShell-ming-ling.html</link><description>`Gmeek-html&lt;img src='https://erainnovator.com/wp-content/uploads/2021/04/PowerShell.png'&gt;`&#13;
&#13;
## 获取 PowerShell Command一覧&#13;
&#13;
```&#13;
$ gcm　或者   $ get-command&#13;
```&#13;
&#13;
## 获取 PowerShell Alias一覧&#13;
&#13;
```&#13;
$ gal　或者   $ Get-Alias&#13;
```&#13;
&#13;
`Gmeek-html&lt;img src='https://linuxhint.com/wp-content/uploads/2022/01/create-powershell-alias-01.png'&gt;`&#13;
&#13;
## PowerShell Alias一覧&#13;
&#13;
|PowerShell Alias|PowerShell Command|例子|&#13;
|---|---|---|&#13;
|gcm|  Get-Command|例：`Get-Command Get-*`　查找所有以 Get- 开头的 cmdlets|&#13;
|gal|  Get-Alias|显示PowerShell Alias一覧|&#13;
|`pwd`🔥|  Get-Location|显示当前所在目录|&#13;
|gl|  Get-Location|同上|&#13;
|`ls`🔥|  Get-ChildItem|例：`Get-ChildItem -Path .`　 列出当前目录下的所有文件和目录|&#13;
|`dir`🔥|  Get-ChildItem|同上|&#13;
|gci|  Get-ChildItem|同上|&#13;
|`cd`🔥|   Set-Location|例：`Set-Location C:\Users\YourName\Documents`  切换到用户的文档目录|&#13;
|chdir|Set-Location|同上|&#13;
|sl|  Set-Location|同上|&#13;
|`copy`🔥|  Copy-Item|例：`Copy-Item C:\source\test.txt C:\destination\`  复制文件 test.txt 到另一个目录|&#13;
|`cp`🔥|  Copy-Item|同上|&#13;
|cpi|  Copy-Item|同上|&#13;
|`mv`🔥| Move-Item|例：`Move-Item C:\temp\oldname.txt C:\temp\newfolder\newname.txt`  将文件 oldname.txt 移动到 newfolder 并重命名为 newname.txt|&#13;
|move|  Move-Item|同上|&#13;
|mi|  Move-Item|同上|&#13;
|`ren`🔥|  Rename-Item|例：`Rename-Item C:\temp\oldname.txt C:\temp\newname.txt`  将文件 oldname.txt 重命名为 newname.txt|&#13;
|rni|  Rename-Item|同上|&#13;
|`md`🔥|  mkdir|&#13;
|`del`🔥|  Remove-Item|例：`Remove-Item C:\temp\test.txt -Force`  删除名为 test.txt 的文件|&#13;
|`rm`🔥|  Remove-Item|同上|&#13;
|`rmdir`🔥|  Remove-Item|同上|&#13;
|erase|  Remove-Item|同上|&#13;
|rd|  Remove-Item|同上|&#13;
|ri|  Remove-Item|同上|&#13;
|`cat`🔥|  Get-Content|例：`$content = Get-Content -Path 'C:\temp\input.txt'`  读取文件内容|&#13;
|`type`🔥|  Get-Content|同上|&#13;
|`diff`🔥|  Compare-Object|例：`$list1 = 1..5 $list2 = 2..6 Compare-Object -ReferenceObject $list1 -DifferenceObject $list2`  比较两个数字列表的不同之处|&#13;
|`compare`🔥|  Compare-Object|同上|&#13;
|`ps`🔥|  Get-Process|获取所有运行中的进程|&#13;
|gps|  Get-Process|同上|&#13;
|`start`🔥|  Start-Process|例：`Start-Process notepad`  启动记事本应用程序|&#13;
|`saps`✨️|  Start-Process|同上|&#13;
|`kill`🔥|  Stop-Process|例：`Stop-Process -Name notepad`  终止所有名为 notepad 的进程|&#13;
|`spps`✨️|  Stop-Process|同上|&#13;
|`gsv`🔥|  Get-Service|获取所有服务的状态|&#13;
|`sasv`✨️|  Start-Service|例：`Start-Service -Name spooler`  启动 Print Spooler 服务|&#13;
|`spsv`✨️|  Stop-Service|例：`Stop-Service -Name spooler`  停止 Print Spooler 服务|&#13;
|`rssv`✨️|  Restart-Service|例：`Restart-Service -Name spooler`  重启 Print Spooler 服务|&#13;
|`wget`🔥|  Invoke-WebRequest|例：`Invoke-WebRequest -Uri 'https://api.github.com/repos/powershell/powershell/releases/latest'`  获取 GitHub 上最新发布的版本信息|&#13;
|`curl`🔥|  Invoke-WebRequest|同上|&#13;
|iwr|  Invoke-WebRequest|同上|&#13;
|`write`🔥|  Write-Host|例：`Write-Host 'Hello, world!'`  输出 Hello, world!|&#13;
|`echo`🔥|  Write-Output|例：`Write-Output 'Hello, world!'`  输出 Hello, world!|&#13;
|`clear`🔥|Clear-Host|清除控制台屏幕|&#13;
|`cls`🔥|  Clear-Host|同上|&#13;
|`man`🔥|  help|例：`Get-Help Get-Process`  获取 Get-Process 的帮助文档|&#13;
|ise|  powershell_ise.exe|&#13;
|%|    ForEach-Object|&#13;
|?|    Where-Object|例：`Get-Process \ Where-Object { $_.CPU -gt 10 }`  获取 CPU 占用率大于 10% 的所有进程|&#13;
|where|  Where-Object|同上|&#13;
|ac|   Add-Content|&#13;
|asnp| Add-PSSnapin|&#13;
|CFS|  ConvertFrom-String|&#13;
|clc|  Clear-Content|&#13;
|clhy| Clear-History|&#13;
|cli|  Clear-Item|&#13;
|clp|  Clear-ItemProperty|&#13;
|clv|  Clear-Variable|&#13;
|cnsn| Connect-PSSession|&#13;
|cpp|  Copy-ItemProperty|&#13;
|cvpa|  Convert-Path|&#13;
|dbp|  Disable-PSBreakpoint|&#13;
|dnsn|  Disconnect-PSSession|&#13;
|ebp|  Enable-PSBreakpoint|&#13;
|ipal|  Import-Alias|&#13;
|epal|  Export-Alias|&#13;
|ipcsv|  Import-Csv|例：`$data = Import-Csv -Path 'C:\temp\data.csv'`  从 CSV 文件导入数据|&#13;
|epcsv|  Export-Csv|例：`$data \ Export-Csv -Path 'C:\temp\output.csv' -NoTypeInformatio`  将数据导出为 CSV 文件|&#13;
|epsn|  Export-PSSession|&#13;
|etsn|  Enter-PSSession|&#13;
|exsn|  Exit-PSSession|&#13;
|fc|  Format-Custom|&#13;
|fhx|  Format-Hex|&#13;
|fl|  Format-List|&#13;
|foreach|  ForEach-Object|&#13;
|ft|  Format-Table|&#13;
|fw|  Format-Wide|&#13;
|`gbp`🌛|  Get-PSBreakpoint|&#13;
|sc|  Set-Content|例：`'Hello, world!' \ Set-Content -Path 'C:\temp\output.txt'`  写入文件内容|&#13;
|`gc`🌛|  Get-Content|例：`$content = Get-Content -Path 'C:\temp\input.txt'`  读取文件内容|&#13;
|`gcb`🌛|  Get-Clipboard|&#13;
|`gcs`🌛|  Get-PSCallStack|&#13;
|`gdr`🌛|  Get-PSDrive|&#13;
|`gi`🌛|  Get-Item|&#13;
|`gin`🌛|  Get-ComputerInfo|&#13;
|`gjb`🌛|  Get-Job|&#13;
|`gm`🌛|  Get-Member|&#13;
|`gmo`🌛|  Get-Module|&#13;
|`gp`🌛|  Get-ItemProperty|&#13;
|`gpv`🌛|  Get-ItemPropertyValue|&#13;
|`gsn`🌛|  Get-PSSession|&#13;
|`gsnp`🌛|  Get-PSSnapin|&#13;
|`gtz`🌛|  Get-TimeZone|&#13;
|`gu`🌛|  Get-Unique|&#13;
|`gv`🌛|  Get-Variable|&#13;
|`gwmi`🌛|  Get-WmiObject|例：`Get-WmiObject -Class Win32_OperatingSystem`  获取操作系统信息|&#13;
|`ghy`🌛|  Get-History|&#13;
|`h`🌛|  Get-History|&#13;
|`history`🌛|  Get-History|&#13;
|group|  Group-Object|例：`Get-Process \Group-Object -Property MainModule.FileName`  按主模块的文件名分组进程|&#13;
|icm|  Invoke-Command|&#13;
|iex|  Invoke-Expression|&#13;
|ihy|  Invoke-History|&#13;
|ii|  Invoke-Item|&#13;
|ipmo|  Import-Module|&#13;
|ipsn|  Import-PSSession|&#13;
|irm|  Invoke-RestMethod|&#13;
|iwmi|  Invoke-WmiMethod|&#13;
|lp|  Out-Printer|&#13;
|measure|  Measure-Object|&#13;
|mount|  New-PSDrive|&#13;
|mp|  Move-ItemProperty|&#13;
|nal|  New-Alias|&#13;
|ndr|  New-PSDrive|&#13;
|ni|  New-Item|例：`New-Item -ItemType Directory -Path .\myFolder`  在当前目录下创建一个名为 myFolder 的新目录|&#13;
|nmo|  New-Module|&#13;
|npssc|  New-PSSessionConfigur|&#13;
|nsn|  New-PSSession|&#13;
|nv|  New-Variable|&#13;
|ogv|  Out-GridView|&#13;
|oh|  Out-Host|&#13;
|popd|  Pop-Location|&#13;
|pushd|  Push-Location|&#13;
|r|  Invoke-History|&#13;
|rbp|  Remove-PSBreakpoint|&#13;
|rcjb|  Receive-Job|&#13;
|rcsn|  Receive-PSSession|&#13;
|rdr|  Remove-PSDrive|&#13;
|rjb|  Remove-Job|&#13;
|rmo|  Remove-Module|&#13;
|rnp|  Rename-ItemProperty|&#13;
|rp|  Remove-ItemProperty|&#13;
|rsn|  Remove-PSSession|&#13;
|rsnp|  Remove-PSSnapin|&#13;
|rujb|  Resume-Job|&#13;
|rv|  Remove-Variable|&#13;
|rvpa|  Resolve-Path|&#13;
|rwmi|  Remove-WmiObject|&#13;
|sal|  Set-Alias|&#13;
|sbp|  Set-PSBreakpoint|&#13;
|scb|  Set-Clipboard|&#13;
|select|  Select-Object|&#13;
|set|  Set-Variable|&#13;
|shcm|  Show-Command|&#13;
|si|  Set-Item|&#13;
|sleep|  Start-Sleep|&#13;
|sls|  Select-String|例：`Select-String -Path 'C:\temp\log.txt' -Pattern 'error'`  在日志文件中搜索含有 'error' 的行|&#13;
|sort|  Sort-Object|例：`Get-Process \ Sort-Object -Property CPU -Descending`   按 CPU 占用率降序排列所有进程|&#13;
|sp|  Set-ItemProperty|&#13;
|`sajb`✨️|  Start-Job|&#13;
|`spjb`✨️|  Stop-Job|&#13;
|stz|  Set-TimeZone|&#13;
|sujb|  Suspend-Job|&#13;
|sv|  Set-Variable|&#13;
|swmi|  Set-WmiInstance|在 WMI 中创建或修改实例|&#13;
|tee|  Tee-Object|&#13;
|trcm|  Trace-Command|&#13;
|wjb|  Wait-Job|&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
## 常用PowerShell命令&#13;
- `cd hkcu`　　像文件系统那样操作Windows Registry&#13;
- `dir –r | select string 'searchforthis'`　在文件里递回地搜索某个字符串&#13;
- `ps | sort –p ws | select –last 5`　使用内存找到五个进程&#13;
- `Restart-Service DHCP`　　重启一个服务，如DHCP&#13;
- `Get-ChildItem – Force`　　在文件夹里列出所有条目&#13;
- `Get-ChildItem –Force c:\directory –Recurse`　　递归一系列的目录或文件夹&#13;
-`Remove-Item C:\tobedeleted –Recurse`　　在目录里移除所有文件而不需要单个移除&#13;
&#13;
- `Get-Content Env:COMPUTERNAME` 获取计算机名&#13;
&#13;
- `Get-WmiObject -Class Win32_OperatingSystem -ComputerName .).Win32Shutdown(2)` 重启当前计算机&#13;
- `Get-WmiObject -Class Win32_ComputerSystem` 获取计算机组成或模型信息&#13;
- `Get-WmiObject -Class Win32_BIOS -ComputerName` 获取当前计算机的BIOS信息&#13;
- `Get-WmiObject -Class Win32_QuickFixEngineering -ComputerName` 列出所安装的修复程序（如QFE或Windows Update文件）&#13;
- `Get-WmiObject -Class Win32_ComputerSystem -Property UserName -ComputerName` 获取当前登录计算机的用户的用户名&#13;
- `Get-WmiObject -Class Win32_Product -ComputerName . | Format-Wide -Column 1` 获取当前计算机所安装的应用的名字&#13;
- `Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter IPEnabled=TRUE -ComputerName . | Format-Table -Property IPAddress` 获取分配给当前计算机的IP地址&#13;
- `Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter IPEnabled=TRUE -ComputerName . | Select-Object -Property [a-z]* -ExcludeProperty IPX*,WINS*`  获取当前机器详细的IP配置报道&#13;
- `Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter 'DHCPEnabled=true' -ComputerName`  找到当前计算机上使用DHCP启用的网络卡&#13;
- `Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter IPEnabled=true -ComputerName . | ForEach-Object -Process {$_.EnableDHCP()}` 在当前计算机上的所有网络适配器上启用DHCP&#13;
- `Get-WMIObject -ComputerName TARGETMACHINE -List | Where-Object -FilterScript {$_.Name -eq 'Win32_Product'}).Install(\MACHINEWHEREMSIRESIDES\path\package.msi`  在远程计算机上安装MSI包&#13;
- `Get-WmiObject -Class Win32_Product -ComputerName . -Filter 'Name='name_of_app_to_be_upgraded'').Upgrade(\MACHINEWHEREMSIRESIDES\path\upgrade_package.msi`　使用基于MSI的应用升级包升级所安装的应用&#13;
- `Get-WmiObject -Class Win32_Product -Filter 'Name='product_to_remove'' -ComputerName . ).Uninstall()` 从当前计算机移除MSI包&#13;
&#13;
- `Start-Sleep 60; Restart-Computer –Force –ComputerName TARGETMACHINE` 一分钟后远程关闭另一台机器&#13;
- `New-Object -ComObject WScript.Network).AddWindowsPrinterConnection(\printerserver\hplaser3`　添加打印机&#13;
- `New-Object -ComObject WScript.Network).RemovePrinterConnection('\printerserver\hplaser3 '`  移除打印机&#13;
- `invoke-command -computername machine1, machine2 -filepath c:\Script\script.ps1`　进入PowerShell会话。</description><guid isPermaLink="true">https://grapehut.us.kg/post/Vol.6%20-guan-yu-PowerShell-ming-ling.html</guid><pubDate>Sat, 21 Sep 2024 15:13:50 +0000</pubDate></item><item><title>Vol.5 网站锦上添花（把萌萌哒的看板娘抱回家 (ノ≧∇≦)ノ | Live2D widget for web platform）</title><link>https://grapehut.us.kg/post/Vol.5%20-wang-zhan-jin-shang-tian-hua-%EF%BC%88-ba-meng-meng-da-de-kan-ban-niang-bao-hui-jia-%20%28%E3%83%8E%E2%89%A7%E2%88%87%E2%89%A6%29%E3%83%8E%20-%20Live2D%20widget%20for%20web%20platform%EF%BC%89.html</link><description># 内容简介&#13;
把萌萌哒的看板娘抱回家 (ノ≧∇≦)ノ | Live2D widget for web platform&#13;
引用：https://github.com/stevenjoezhang/live2d-widget&#13;
&#13;
# 添加内容&#13;
如果你是小白，或者只需要最基础的功能，那么只用将这一行代码加入 html 页面的 head 或 body 中，即可加载看板娘：&#13;
```&#13;
&lt;script src='https://fastly.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js'&gt;&lt;/script&gt;&#13;
```&#13;
autoload.js 会自动加载三个文件：waifu.css，live2d.min.js 和 waifu-tips.js。</description><guid isPermaLink="true">https://grapehut.us.kg/post/Vol.5%20-wang-zhan-jin-shang-tian-hua-%EF%BC%88-ba-meng-meng-da-de-kan-ban-niang-bao-hui-jia-%20%28%E3%83%8E%E2%89%A7%E2%88%87%E2%89%A6%29%E3%83%8E%20-%20Live2D%20widget%20for%20web%20platform%EF%BC%89.html</guid><pubDate>Sun, 15 Sep 2024 06:16:06 +0000</pubDate></item><item><title>Vol.4 git原理及常用命令</title><link>https://grapehut.us.kg/post/Vol.4%20git-yuan-li-ji-chang-yong-ming-ling.html</link><description>&#13;
# git 公式サイト&#13;
[https://git-scm.com](https://git-scm.com/)&#13;
&#13;
[http://git-cheatsheet.com](http://git-cheatsheet.com/)&#13;
&#13;
[PDF](https://wac-cdn.atlassian.com/dam/jcr:e7e22f25-bba2-4ef1-a197-53f46b6df4a5/SWTM-2088_Atlassian-Git-Cheatsheet.pdf)&#13;
&#13;
# git-cheat-sheet&#13;
![git](./git-cheat-sheet.png)&#13;
&#13;
&#13;
# git 工作原理&#13;
![git](./git-status.png)&#13;
```&#13;
・Remote：远程仓库，托管代码的服务器&#13;
・Repository：仓库区（或版本库），其中HEAD指向最新放入仓库的版本&#13;
・Index／Stage：暂存区（或索引区），用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息&#13;
・Workspace：工作区，就是你平时存放项目代码的地方&#13;
```&#13;
#### １．具体例：下图中的四条命令在「工作区」、「暂存区」、「仓库区」之间复制文件。</description><guid isPermaLink="true">https://grapehut.us.kg/post/Vol.4%20git-yuan-li-ji-chang-yong-ming-ling.html</guid><pubDate>Wed, 04 Sep 2024 14:30:35 +0000</pubDate></item><item><title>Vol.3 网站发布（任意域名）</title><link>https://grapehut.us.kg/post/Vol.3%20-wang-zhan-fa-bu-%EF%BC%88-ren-yi-yu-ming-%EF%BC%89.html</link><description>```&#13;
域名　→　cloudflare　→　github&#13;
```&#13;
&#13;
## 一、注册域名（任意域名）&#13;
付费的，免费的都可以，根据自身钱包的富裕程度，👀  省略若干字。</description><guid isPermaLink="true">https://grapehut.us.kg/post/Vol.3%20-wang-zhan-fa-bu-%EF%BC%88-ren-yi-yu-ming-%EF%BC%89.html</guid><pubDate>Sun, 01 Sep 2024 06:04:46 +0000</pubDate></item><item><title>Vol.2 Gmeek构建网站（进阶篇）</title><link>https://grapehut.us.kg/post/Vol.2%20Gmeek-gou-jian-wang-zhan-%EF%BC%88-jin-jie-pian-%EF%BC%89.html</link><description>## 一、主题配置 👀 &#13;
&#13;
### 1. 手动模式（默认）&#13;
这种模式就是当访问者第一次打开博客页面时，呈现的是亮主题。</description><guid isPermaLink="true">https://grapehut.us.kg/post/Vol.2%20Gmeek-gou-jian-wang-zhan-%EF%BC%88-jin-jie-pian-%EF%BC%89.html</guid><pubDate>Sun, 01 Sep 2024 06:01:28 +0000</pubDate></item><item><title>Vol.1 Gmeek构建网站（基础篇）</title><link>https://grapehut.us.kg/post/Vol.1%20Gmeek-gou-jian-wang-zhan-%EF%BC%88-ji-chu-pian-%EF%BC%89.html</link><description>[Gmeek](https://github.com/Meekdai/Gmeek) 一个博客框架&#13;
超轻量级个人博客模板，完全基于`Github Pages `、 `Github Issues` 和 `Github Actions`，可以称作`All in Github`&#13;
&gt; 引用：https://blog.meekdai.com/post/Gmeek-kuai-su-shang-shou.html&#13;
&#13;
&#13;
## 一、安装&#13;
&gt; [!TIP]&#13;
&gt; 安装极其简单，根据以下步骤，一步一步操作。</description><guid isPermaLink="true">https://grapehut.us.kg/post/Vol.1%20Gmeek-gou-jian-wang-zhan-%EF%BC%88-ji-chu-pian-%EF%BC%89.html</guid><pubDate>Sat, 31 Aug 2024 09:59:06 +0000</pubDate></item><item><title>About Me</title><link>https://grapehut.us.kg/about.html</link><description># Stay hungry. Stay foolish. --Steven Jobs&#13;
。</description><guid isPermaLink="true">https://grapehut.us.kg/about.html</guid><pubDate>Sat, 31 Aug 2024 14:18:20 +0000</pubDate></item></channel></rss>